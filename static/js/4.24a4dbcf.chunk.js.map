{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","link","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","sendMessage","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageAC","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,YAAc,+B,oBCA1PD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,2B,oBCA7DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,wHCapMC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAOC,OAAvB,SACI,cAAC,IAAD,CAASF,UAAWC,IAAOE,KAAMC,GAAIN,EAArC,SAA4CD,EAAMQ,U,kBCA/CC,EANC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAOM,QAAvB,SAAiCV,EAAMU,W,yCC8BzCC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACd,GAEpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAM,iBACNa,YAAY,oGACZC,SAAU,CAACC,IAAUZ,OAGhC,8BACI,wBAAQR,UAAWC,IAAOoB,YAA1B,0BAODC,EA9CC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBvB,KAAMuB,EAAEvB,KAAMN,GAAI6B,EAAE7B,IAA1B6B,EAAE7B,OAC5D8B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoBxB,QAASwB,EAAExB,SAAjBwB,EAAEhC,OAC1CwB,EAAMS,eAM3B,OAAqB,IAAjBnC,EAAMoC,OAAyB,cAAC,IAAD,CAAU7B,GAAI,WAG7C,sBAAKJ,UAAWC,IAAOyB,QAAvB,UACI,qBAAK1B,UAAWC,IAAOiC,aAAvB,SACKT,IAEL,sBAAKzB,UAAWC,IAAO6B,SAAvB,UACI,qBAAK9B,UAAWC,IAAOM,QAAvB,SAAiCsB,IACjC,cAACnB,EAAD,CAAqBG,SAbb,SAACsB,GACjBtC,EAAMwB,YAAYc,EAAOH,0B,+CCb7BI,EAA6B,SAACb,GAAD,MAAY,CACzCU,OAAQV,EAAMc,KAAKJ,S,OCeRK,sBACXC,aAfkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACgB,GACtB,MAAO,CACHnB,YAAa,SAACW,GACVQ,EAASC,YAAcT,UDNH,SAACU,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK/C,MAAMoC,OACT,cAACS,EAAD,eAAeE,KAAK/C,QADI,cAAC,IAAD,CAAUO,GAAI,eAHV,GACXyC,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCG9DL,CAGbhB","file":"static/js/4.24a4dbcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3iPoG\",\"dialogsItems\":\"Dialogs_dialogsItems__2So2D\",\"active\":\"Dialogs_active__11CEO\",\"dialog\":\"Dialogs_dialog__1wvyN\",\"messages\":\"Dialogs_messages__2nTe5\",\"message\":\"Dialogs_message__2ha5K\",\"sendMessage\":\"Dialogs_sendMessage__1XbXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2nRZr\",\"link\":\"DialogItem_link__1Iv6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__3uk-K\",\"dialogsItems\":\"Message_dialogsItems__1OvUU\",\"active\":\"Message_active__2qOIi\",\"dialog\":\"Message_dialog__3gHN5\",\"messages\":\"Message_messages__F5E-x\",\"message\":\"Message_message__14qsM\"};","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink className={styles.link} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (props.isAuth === false) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div className={styles.message}>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder=\"Введите сообщение\"\r\n                       validate={[required, maxLength50]}>\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <button className={styles.sendMessage}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageAC} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) =>{\r\n            dispatch(sendMessageAC(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}