{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","aboutMe","fullName","Preloader","Post","item","message","likesCounts","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","map","v","likesCount","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.2ca9cd6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1QyLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3bmJn\",\"postsBlock\":\"MyPosts_postsBlock__3n6kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1HScw\"};","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,  //режим редактирования статуса\r\n        status: this.props.status,\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange =(e) =>{\r\n        this.setState( {\r\n            status: e.currentTarget.value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"---\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}\r\n                    onChange={this.onStatusChange}\r\n                    />\r\n                </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () =>{\r\n        setStatus(props.status);\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       value={status}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                />\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) =>{\r\n\r\n    if (!profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSzIo8rq6p_VE-r3ifLF3hFx0Ykg-FJpfOOAw&usqp=CAU'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormsControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map(v => <Post message={v.message} likesCounts={v.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder=\"Post message\" validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm)\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) =>{\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n               this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n/*        console.log('Profile render');*/\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n            updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n/*    console.log('mapStateToProps render PROFILE');*/\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus\r\n        }),\r\n    withRouter,\r\n/*    WithAuthRedirect*/\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}